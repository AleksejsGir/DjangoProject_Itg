from django.db import models

# Модель для категорий новостей
class Category(models.Model):
    # Поле для названия категории (например, "Спорт", "Технологии")
    name = models.CharField(
        max_length=100,  # Максимальная длина строки - 100 символов
        unique=True,  # Название должно быть уникальным
        verbose_name="Название категории"  # Название поля в админке
    )
    # Поле для уникального URL (slug) категории (например, "sport", "tech")
    slug = models.SlugField(
        unique=True,  # Значение должно быть уникальным
        verbose_name="URL категории"  # Название поля в админке
    )

    # Класс Meta определяет настройки модели
    class Meta:
        verbose_name = "Категория"  # Имя модели в админке (ед. число)
        verbose_name_plural = "Категории"  # Имя модели во множественном числе

    # Метод для красивого отображения объекта в админке
    def __str__(self):
        return self.name  # Возвращает название категории


# Модель для новостей
class News(models.Model):
    # Поле для заголовка новости (например, "События дня")
    title = models.CharField(
        max_length=200,  # Максимальная длина строки - 200 символов
        verbose_name="Заголовок новости"  # Название поля в админке
    )
    # Поле для содержимого новости (текст)
    content = models.TextField(
        verbose_name="Содержимое новости"  # Название поля в админке
    )
    # Связь с категорией (одна категория может иметь много новостей)
    category = models.ForeignKey(
        Category,  # Ссылка на модель Category
        on_delete=models.CASCADE,  # Удаление категории удалит все связанные новости
        related_name="news",  # Имя для обратной связи (Category.news)
        verbose_name="Категория"  # Название поля в админке
    )
    # Автоматически добавляется дата создания записи
    created_at = models.DateTimeField(
        auto_now_add=True,  # Записывается автоматически при создании объекта
        verbose_name="Дата создания"  # Название поля в админке
    )
    # Автоматически обновляется дата при сохранении записи
    updated_at = models.DateTimeField(
        auto_now=True,  # Обновляется автоматически при каждом сохранении объекта
        verbose_name="Дата обновления"  # Название поля в админке
    )

    # Класс Meta для дополнительных настроек модели
    class Meta:
        verbose_name = "Новость"  # Имя модели в админке (ед. число)
        verbose_name_plural = "Новости"  # Имя модели во множественном числе
        ordering = ["-created_at"]  # Сортировка по дате создания (от новых к старым)

    # Метод для отображения объекта в админке
    def __str__(self):
        return self.title  # Возвращает заголовок новости
